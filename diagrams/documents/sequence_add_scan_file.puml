@startuml sequence_add_scan_file

hide footbox


actor "Utilisateur" as user
participant "DocumentPage" as docView << View >>
participant "ScanFile" as ScanFile << View >>
participant "DocumentScanner" as scanner << Service >>
participant "DocumentStore" as docVm << ViewModel >>
participant "Document" as docM << Model >>
participant "File" as fileM << Model >>
participant "EliseWebService" as ws << Service >>



ref over user, ScanFile : Authentification
activate user
user -> docView : clique sur le bouton "liste des action"
activate docView
docView --> user : affiche la liste des actions
user -> docView : clique sur le bouton "scanner un fichier"
' docView instancie un objet de type ScanFile
docView -> ScanFile : demande la page de scan
deactivate docView
activate ScanFile
ScanFile --> user : affiche la page de scan
user -> ScanFile : scanDocument()
ScanFile -> scanner : demande l'activation du scanner
activate scanner
scanner --> ScanFile 
alt camera disponible
user -> scanner : scanne le document
scanner -> ScanFile : retourne le document scanné
        ScanFile --> user : affiche la liste des images scannés
        alt  Utilisateur veut supprimer une image 
            user -> ScanFile : deleteImage()
            ScanFile --> user 
        end
            user -> ScanFile : goToOrder()
            ScanFile -> user : affiche la liste des images scannés
            note right : Sous forme de vignette 
            user -> ScanFile : change la position des images
            user -> ScanFile : save()
            ScanFile -> user : affiche le paneau de creation
            user -> ScanFile : clique sur le bouton "valider"
            alt Nom de fichier valide
            ScanFile -> docVm : addFile()
            activate docVm
            docVm -> ws : UploadFile()
            activate ws
            ws -> docVm : UploadFileResponse
            deactivate ws
            docVm -> ws: AddAttachmentToMail()
            activate ws
            ws -> docVm : AddAttachmentToMailResponse
            deactivate ws
            docVm -> fileM : addFile()
            activate fileM
            fileM --> docVm 
            deactivate fileM
            docVm -> docM : linkFile()
            activate docM
            docM --> docVm 
            deactivate docM
            docVm --> ScanFile
            deactivate docVm
            alt  fichier enregistré
                    ref over user,docView,ScanFile,scanner,docVm,docM,fileM,ws : Accéder à un document 

            else fichier non enregistré
                ScanFile -> user : affiche un message d'erreur
              end
              else Nom de fichier non valide
                ScanFile -> user : affiche un message d'erreur
            end
else camera non disponible
    ScanFile --> user : affiche un message d'erreur
end
deactivate ScanFile
deactivate user